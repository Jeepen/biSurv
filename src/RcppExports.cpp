// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// chrCpp
List chrCpp(NumericVector x, NumericVector y, NumericVector xstatus, NumericVector ystatus);
RcppExport SEXP _biSurv_chrCpp(SEXP xSEXP, SEXP ySEXP, SEXP xstatusSEXP, SEXP ystatusSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xstatus(xstatusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ystatus(ystatusSEXP);
    rcpp_result_gen = Rcpp::wrap(chrCpp(x, y, xstatus, ystatus));
    return rcpp_result_gen;
END_RCPP
}
// eyyfunc
NumericMatrix eyyfunc(NumericVector x, NumericVector y, NumericVector xuni, NumericVector yuni);
RcppExport SEXP _biSurv_eyyfunc(SEXP xSEXP, SEXP ySEXP, SEXP xuniSEXP, SEXP yuniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xuni(xuniSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type yuni(yuniSEXP);
    rcpp_result_gen = Rcpp::wrap(eyyfunc(x, y, xuni, yuni));
    return rcpp_result_gen;
END_RCPP
}
// hazardscpp
Rcpp::List hazardscpp(arma::vec x, arma::vec y, arma::vec xstatus, arma::vec ystatus, arma::vec xuni, arma::vec yuni);
RcppExport SEXP _biSurv_hazardscpp(SEXP xSEXP, SEXP ySEXP, SEXP xstatusSEXP, SEXP ystatusSEXP, SEXP xuniSEXP, SEXP yuniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type xstatus(xstatusSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ystatus(ystatusSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type xuni(xuniSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yuni(yuniSEXP);
    rcpp_result_gen = Rcpp::wrap(hazardscpp(x, y, xstatus, ystatus, xuni, yuni));
    return rcpp_result_gen;
END_RCPP
}
// martin
NumericMatrix martin(NumericVector time, NumericVector status, NumericVector times, NumericVector cumhaz, int n, int nu);
RcppExport SEXP _biSurv_martin(SEXP timeSEXP, SEXP statusSEXP, SEXP timesSEXP, SEXP cumhazSEXP, SEXP nSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type time(timeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type status(statusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type times(timesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cumhaz(cumhazSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(martin(time, status, times, cumhaz, n, nu));
    return rcpp_result_gen;
END_RCPP
}
// taucpp
Rcpp::List taucpp(Rcpp::NumericVector x, Rcpp::NumericVector y, Rcpp::NumericVector xstatus, Rcpp::NumericVector ystatus, Rcpp::NumericVector KMxsurv, Rcpp::NumericVector KMysurv, Rcpp::NumericVector KMxtime, Rcpp::NumericVector KMytime);
RcppExport SEXP _biSurv_taucpp(SEXP xSEXP, SEXP ySEXP, SEXP xstatusSEXP, SEXP ystatusSEXP, SEXP KMxsurvSEXP, SEXP KMysurvSEXP, SEXP KMxtimeSEXP, SEXP KMytimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xstatus(xstatusSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ystatus(ystatusSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type KMxsurv(KMxsurvSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type KMysurv(KMysurvSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type KMxtime(KMxtimeSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type KMytime(KMytimeSEXP);
    rcpp_result_gen = Rcpp::wrap(taucpp(x, y, xstatus, ystatus, KMxsurv, KMysurv, KMxtime, KMytime));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_biSurv_chrCpp", (DL_FUNC) &_biSurv_chrCpp, 4},
    {"_biSurv_eyyfunc", (DL_FUNC) &_biSurv_eyyfunc, 4},
    {"_biSurv_hazardscpp", (DL_FUNC) &_biSurv_hazardscpp, 6},
    {"_biSurv_martin", (DL_FUNC) &_biSurv_martin, 6},
    {"_biSurv_taucpp", (DL_FUNC) &_biSurv_taucpp, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_biSurv(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
