head(melted)
head(melted,10)
library(ggplot2)
plot(preds$time, preds$P1[1,], type = 'l')
lines(preds$time, preds$P1[2,], col = 'red')
preds$se.P1
plower <- preds$P1 - qnorm(.975)
qnorm(.975)
plower <- preds$P1 - qnorm(.975) * preds$se.P1
pupper <- preds$P1 + qnorm(.975) * preds$se.P1
plower
lines(preds$time, plower[1,])
lines(preds$time, pupper[1,])
lines(preds$time, pupper[2,], col = 'red')
lines(preds$time, plower[2,], col = 'red')
library(ggplot2)
plot(logmodel)
par(mfrow = c(2,2))
plot(logmodel)
par(mfrow = c(1,2))
plot(logmodel)
preds$P1 c(-qnorm(.975), 0, qnorm(.975)) * preds$se.P1
preds$P1 + c(-qnorm(.975), 0, qnorm(.975)) * preds$se.P1
preds$P1 + c(qnorm(.975)) * preds$se.P1
head(plower)
plotdata <- data.frame(time = preds$time, platelet0 = preds$P1[1,], platelet1 = preds$P1[2,], placelet0lwr = plower[1,],
placelet1lwr = plower[2,], placelet0upr = pupper[1,], placelet1upper = pupper[2,])
melted <- melt(plotdata)
head(plotdata)
melted <- melt(plotdata, id = "time")
head(melted)
melted[100:105,]
length(preds$time)
plotdata <- data.frame(time = rep(preds$time, 3), platelet0 = c(preds$P1[1,], plower[1,], pupper[1,]),
platelet1 = c(preds$P1[2,], plower[2,], pupper[2,]))
melted <- melt(plotdata, id = "time")
qplot(time, value, colour = variable, geom = 'line')
qplot(time, value, colour = variable, geom = 'line', data = melted)
plotdata <- data.frame(time = preds$time, platelet0 = preds$P1[1,], platelet1 = preds$P1[2,], placelet0lwr = plower[1,],
placelet1lwr = plower[2,], placelet0upr = pupper[1,], placelet1upper = pupper[2,])
qplot(time, value[variable == "platelet0" | variable == "platelet1"], colour = variable, geom = 'line', data = melted)
qplot(time[variable == "platelet0" | variable == "platelet1"], value[variable == "platelet0" | variable == "platelet1"], colour = variable, geom = 'line', data = melted)
plotdata <- data.frame(time = preds$time, platelet0 = preds$P1[1,], platelet1 = preds$P1[2,])
melted <- melt(plotdata, id = "time")
qplot(time, value, colour = variable, geom = 'line', data = melted)
qplot(time, value, colour = variable, geom = 'line', data = melted) + geom_ribbon(aes(lwr = plower[1,], upr = pupper[1,]))
qplot(time, value, colour = variable, geom = 'line', data = melted) +
geom_ribbon(aes(lwr = c(plower[1,], plower[2,]), upr = c(pupper[1,], pupper[2,])))
qplot(time, value, colour = variable, geom = 'line', data = melted) +
geom_ribbon(aes(ymin = c(plower[1,], plower[2,]), ymax = c(pupper[1,], pupper[2,])))
qplot(time, value, colour = variable, geom = 'line', data = melted) +
geom_ribbon(aes(ymin = c(plower[1,], plower[2,]), ymax = c(pupper[1,], pupper[2,])), colour = variable)
qplot(time, value, colour = variable, geom = 'line', data = melted) +
geom_ribbon(aes(ymin = c(plower[1,], plower[2,]), ymax = c(pupper[1,], pupper[2,])), alpha = .3)
?geom_ribbon
qplot(time, value, colour = variable, geom = 'line', data = melted) +
geom_ribbon(aes(ymin = c(plower[1,], plower[2,]), ymax = c(pupper[1,], pupper[2,]), colour = variable), alpha = .3)
qplot(time, value, colour = variable, geom = 'line', data = melted) +
geom_ribbon(aes(ymin = c(plower[1,], plower[2,]), ymax = c(pupper[1,], pupper[2,]), colour = variable), alpha = .3, fill = "variable")
plotdata <- data.frame(time = preds$time, platelet0 = preds$P1[1,], platelet1 = preds$P1[2,])
melted <- melt(plotdata, id = "time")
qplot(time, value, colour = variable, geom = 'line', data = melted) +
geom_ribbon(aes(ymin = c(plower[1,], plower[2,]), ymax = c(pupper[1,], pupper[2,]), colour = variable), alpha = .3)
?geom_line
qplot(time, value, colour = variable, geom = 'line', data = melted)
qplot(time, value, colour = variable, geom = 'line', data = melted) +
geom_ribbon(aes(ymin = c(plower[1,], plower[2,]), ymax = c(pupper[1,], pupper[2,]), colour = variable), alpha = .3)
qplot(time, value, colour = variable, geom = 'line', data = melted) +
geom_ribbon(aes(ymin = c(plower[1,], plower[2,]), ymax = c(pupper[1,], pupper[2,])), alpha = .3, colour = variable)
qplot(time, value, colour = variable, geom = 'line', data = melted) +
geom_ribbon(aes(ymin = c(plower[1,], plower[2,]), ymax = c(pupper[1,], pupper[2,])), alpha = .3, colour = melted$variable)
qplot(time, value, colour = variable, geom = 'line', data = melted) +
geom_ribbon(aes(ymin = c(plower[1,], plower[2,]), ymax = c(pupper[1,], pupper[2,]), fill = "variable"), alpha = .3)
qplot(time, value, colour = variable, geom = 'line', data = melted) +
geom_ribbon(aes(ymin = c(plower[1,], plower[2,]), ymax = c(pupper[1,], pupper[2,]), fill = melted$variable), alpha = .3)
qplot(time, value, colour = variable, geom = 'line', data = melted) +
geom_ribbon(aes(ymin = c(plower[1,], plower[2,]), ymax = c(pupper[1,], pupper[2,]), fill = variable), alpha = .3)
qplot(time, value, colour = variable, geom = 'step', data = melted) +
geom_ribbon(aes(ymin = c(plower[1,], plower[2,]), ymax = c(pupper[1,], pupper[2,]), fill = variable), alpha = .3)
qplot(time, value, colour = variable, geom = 'step', data = melted) +
geom_stepribbon(aes(ymin = c(plower[1,], plower[2,]), ymax = c(pupper[1,], pupper[2,]), fill = variable), alpha = .3)
install.packages("kmggplot2")
qplot(time, value, colour = variable, geom = 'step', data = melted) +
geom_stepribbon(aes(ymin = c(plower[1,], plower[2,]), ymax = c(pupper[1,], pupper[2,]), fill = variable), alpha = .3, geom = "step")
qplot(time, value, colour = variable, geom = 'step', data = melted) +
geom_ribbon(aes(ymin = c(plower[1,], plower[2,]), ymax = c(pupper[1,], pupper[2,]), fill = variable), alpha = .3, geom = "step")
install.packages("RcmdrPlugin.KMggplot2")
library(ggplot2)
library(ggplot2)
qplot(time, value, colour = variable, geom = 'step', data = melted) +
geom_line(aes(x = time, y = c(plower[1,], plower[2,])), fill = variable))
qplot(time, value, colour = variable, geom = 'step', data = melted) +
geom_line(aes(x = time, y = c(plower[1,], plower[2,])), colour = variable))
qplot(time, value, colour = variable, geom = 'step', data = melted) +
geom_line(aes(x = time, y = c(plower[1,], plower[2,])), colour = variable)
qplot(time, value, colour = variable, geom = 'step', data = melted) +
geom_line(aes(x = time, y = c(plower[1,], plower[2,])), colour = melted$variable)
qplot(time, value, colour = variable, geom = 'step', data = melted) +
geom_line(aes(x = time, y = c(plower[1,], plower[2,])))#, colour = melted$variable)
qplot(time, value, colour = variable, geom = 'step', data = melted) +
geom_step(aes(x = time, y = c(plower[1,], plower[2,])))#, colour = melted$variable)
qplot(time, value, colour = variable, geom = 'step', data = melted) +
geom_step(aes(x = time, y = c(plower[1,], plower[2,]))) + geom_step(aes(x = time, y = c(pupper[1,], pupper[2,])))#, colour = melted$variable)
qplot(time, value, colour = variable, geom = 'step', data = melted) +
geom_step(aes(x = time, y = c(plower[1,], plower[2,])), linetype = 2) +
geom_step(aes(x = time, y = c(pupper[1,], pupper[2,])))#, colour = melted$variable)
qplot(time, value, colour = variable, geom = 'step', data = melted) +
geom_step(aes(x = time, y = c(plower[1,], plower[2,])), linetype = 2) +
geom_step(aes(x = time, y = c(pupper[1,], pupper[2,])), linetype = 2)#, colour = melted$variable)
qplot(time, value, colour = variable, geom = 'step', data = melted) +
geom_step(aes(x = time, y = c(plower[1,], plower[2,]))) +
geom_step(aes(x = time, y = c(pupper[1,], pupper[2,])))
qplot(time, value, colour = variable, geom = 'step', data = melted) + ylim(0,1)
geom_step(aes(x = time, y = c(plower[1,], plower[2,]))) +
geom_step(aes(x = time, y = c(pupper[1,], pupper[2,])))
qplot(time, value, colour = variable, geom = 'step', data = melted) + ylim(0,1) +
geom_step(aes(x = time, y = c(plower[1,], plower[2,]))) +
geom_step(aes(x = time, y = c(pupper[1,], pupper[2,])))
qplot(time, value, colour = variable, geom = 'step', data = melted) + #ylim(0,1) +
geom_step(aes(x = time, y = c(plower[1,], plower[2,]))) +
geom_step(aes(x = time, y = c(pupper[1,], pupper[2,])))
library(timereg)
library(ggplot2)
data(bmt)
bmt$platelet <- factor(bmt$platelet)
logmodel <- comp.risk(Event(time, cause) ~ platelet, data = bmt, model = "logistic", cause = 1)
newdata <- data.frame(platelet = c(0,1))
pred <- predict(logmodel, newdata = newdata, times = 5)
preds <- predict(logmodel, newdata = newdata)
plwr <- preds$P1 - qnorm(.975) * preds$se.P1
pupr <- preds$P1 + qnorm(.975) * preds$se.P1
plot(preds$time, preds$P1[1,], type = 'l')
lines(preds$time, preds$P1[2,], col = 'red')
plot(logmodel$)
plotdata <- data.frame(time = preds$time, platelet0 = preds$P1[1,], platelet1 = preds$P1[2,])
melted <- melt(plotdata, id = "time")
qplot(time, value, colour = variable, geom = 'step', data = melted) + #ylim(0,1) +
geom_step(aes(x = time, y = c(plower[1,], plower[2,]))) +
geom_step(aes(x = time, y = c(pupper[1,], pupper[2,])))
qplot(time, value, colour = variable, geom = 'step', data = melted) + #ylim(0,1) +
geom_step(aes(x = time, y = c(plwr[1,], plwr[2,]))) +
geom_step(aes(x = time, y = c(pupr[1,], pupr[2,])))
library(timereg)
library(ggplot2)
data(bmt)
bmt$platelet <- factor(bmt$platelet)
logmodel <- comp.risk(Event(time, cause) ~ platelet, data = bmt, model = "logistic", cause = 1)
newdata <- data.frame(platelet = c(0,1))
pred <- predict(logmodel, newdata = newdata, times = 5)
preds <- predict(logmodel, newdata = newdata)
plwr <- preds$P1 - qnorm(.975) * preds$se.P1
pupr <- preds$P1 + qnorm(.975) * preds$se.P1
plot(preds$time, preds$P1[1,], type = 'l')
lines(preds$time, preds$P1[2,], col = 'red')
plot(logmodel$)
plotdata <- data.frame(time = preds$time, platelet0 = preds$P1[1,], platelet1 = preds$P1[2,])
melted <- melt(plotdata, id = "time")
qplot(time, value, colour = variable, geom = 'step', data = melted) + #ylim(0,1) +
geom_step(aes(x = time, y = c(plwr[1,], plwr[2,]))) +
geom_step(aes(x = time, y = c(pupr[1,], pupr[2,])))
pred
pred$P1
pred$P1
p0 <- pred$P1[1,1]
p1 <- pred$P1[2,1]
p0SE <- pred$se.P1[1,1]
p1SE <- pred$se.P1[2,1]
Sigma <- matrix(c(p0SE,0,0,p1SE), nrow = 2)
h <- c(p0/p1, -1/p0)
RRSE <- sqrt((t(h) %*% Sigma %*% h)[1,1])
RRSE
log(p0/p1)
p0/p1
p0/p1*exp(c(-qnorm(.975), qnorm(.975)) * RRSE)
Sigma <- matrix(c(p0SE^2,0,0,p1SE^2), nrow = 2)
h <- c(p0/p1, -1/p0)
RRSE <- sqrt((t(h) %*% Sigma %*% h)[1,1])
p0/p1*exp(c(-qnorm(.975), qnorm(.975)) * RRSE)
p0SE
plot(preds$time, preds$P1[1,], type = 'l')
lines(preds$time, preds$P1[2,], col = 'red')
plot(logmodel$)
plotdata <- data.frame(time = preds$time, platelet0 = preds$P1[1,], platelet1 = preds$P1[2,])
melted <- melt(plotdata, id = "time")
qplot(time, value, colour = variable, geom = 'step', data = melted) + #ylim(0,1) +
geom_step(aes(x = time, y = c(plwr[1,], plwr[2,]))) +
geom_step(aes(x = time, y = c(pupr[1,], pupr[2,])))
p0 <- pred$P1[1,1]
p1 <- pred$P1[2,1]
p0SE <- pred$se.P1[1,1]
p1SE <- pred$se.P1[2,1]
Sigma <- matrix(c(p0SE^2,0,0,p1SE^2), nrow = 2)
h <- c(p0/p1, -1/p0)
RRSE <- sqrt((t(h) %*% Sigma %*% h)[1,1])
p0/p1*exp(c(-qnorm(.975), qnorm(.975)) * RRSE)
p0
p1
p0/p1
p0/p1*exp(c(-qnorm(.975), 0, qnorm(.975)) * RRSE)
p0/p1*exp(c(0, -qnorm(.975), qnorm(.975)) * RRSE)
qplot(time, value, colour = variable, geom = 'step', data = melted) + xlim(0,10)#ylim(0,1) +
qplot(time, value, colour = variable, geom = 'step', data = melted) + xlim(0,10) + #ylim(0,1) +
geom_step(aes(x = time, y = c(plwr[1,], plwr[2,]))) +
geom_step(aes(x = time, y = c(pupr[1,], pupr[2,])))
qplot(time, value, colour = variable, geom = 'step', data = melted) + xlim(0,20) + #ylim(0,1) +
geom_step(aes(x = time, y = c(plwr[1,], plwr[2,]))) +
geom_step(aes(x = time, y = c(pupr[1,], pupr[2,])))
tail(preds$time)
qplot(time, value, colour = variable, geom = 'step', data = melted) + xlim(0,preds$time[length(preds$time-4)]) + #ylim(0,1) +
geom_step(aes(x = time, y = c(plwr[1,], plwr[2,]))) +
geom_step(aes(x = time, y = c(pupr[1,], pupr[2,])))
qplot(time, value, colour = variable, geom = 'step', data = melted) + xlim(0,preds$time[length(preds$time-8)]) + #ylim(0,1) +
geom_step(aes(x = time, y = c(plwr[1,], plwr[2,]))) +
geom_step(aes(x = time, y = c(pupr[1,], pupr[2,])))
preds$time[length(preds$time-8)]
preds$time[length(preds$time-8)
)
qplot(time, value, colour = variable, geom = 'step', data = melted) + xlim(0,preds$time[length(preds$time)-4)]) + #ylim(0,1) +
geom_step(aes(x = time, y = c(plwr[1,], plwr[2,]))) +
geom_step(aes(x = time, y = c(pupr[1,], pupr[2,])))
qplot(time, value, colour = variable, geom = 'step', data = melted) + xlim(0,preds$time[length(preds$time)-4]) + #ylim(0,1) +
geom_step(aes(x = time, y = c(plwr[1,], plwr[2,]))) +
geom_step(aes(x = time, y = c(pupr[1,], pupr[2,])))
?cuminc
library(cmprsk)
set.seed(2)
ss <- rexp(100)
gg <- factor(sample(1:3,100,replace=TRUE),1:3,c(
'
a
'
,
'
b
'
,
'
c
'
))
cc <- sample(0:2,100,replace=TRUE)
strt <- sample(1:2,100,replace=TRUE)
print(xx <- cuminc(ss,cc,gg,strt))
plot(xx,lty=1,color=1:6)
plot(xx,lty=1,color=1:6)
par(mfrow = c(1,1))
plot(xx,lty=1,color=1:6)
logmodel <- comp.risk(Event(time, cause) ~ strata(platelet), data = bmt, model = "logistic", cause = 1)
summary(logmodel)
plot(logmodel)
newdata <- data.frame(platelet = c(0,1))
pred <- predict(logmodel, newdata = newdata, times = 5)
pred
pred$P1
preds <- predict(logmodel, newdata = newdata)
plwr <- preds$P1 - qnorm(.975) * preds$se.P1
pupr <- preds$P1 + qnorm(.975) * preds$se.P1
plotdata <- data.frame(time = preds$time, platelet0 = preds$P1[1,], platelet1 = preds$P1[2,])
melted <- melt(plotdata, id = "time")
qplot(time, value, colour = variable, geom = 'step', data = melted) + xlim(0,preds$time[length(preds$time)-4]) + #ylim(0,1) +
geom_step(aes(x = time, y = c(plwr[1,], plwr[2,]))) +
geom_step(aes(x = time, y = c(pupr[1,], pupr[2,])))
p0 <- pred$P1[1,1]
p1 <- pred$P1[2,1]
p0SE <- pred$se.P1[1,1]
p1SE <- pred$se.P1[2,1]
Sigma <- matrix(c(p0SE^2,0,0,p1SE^2), nrow = 2)
h <- c(p0/p1, -1/p0)
RRSE <- sqrt((t(h) %*% Sigma %*% h)[1,1])
p0/p1*exp(c(0, -qnorm(.975), qnorm(.975)) * RRSE)
Sigma
plot(preds)
preds$P1
preds$unif.band
preds$RR
pred$RR
p0/p1*exp(c(0, -qnorm(.975), qnorm(.975)) * RRSE)
pred$P1
qplot(time, value, colour = variable, geom = 'step', data = melted) + xlim(0,preds$time[length(preds$time)-4]) + #ylim(0,1) +
geom_step(aes(x = time, y = c(plwr[1,], plwr[2,]))) +
geom_step(aes(x = time, y = c(pupr[1,], pupr[2,])))
qplot(time, value, colour = variable, geom = 'step', data = melted) + xlim(0,5) + #ylim(0,1) +
geom_step(aes(x = time, y = c(plwr[1,], plwr[2,]))) +
geom_step(aes(x = time, y = c(pupr[1,], pupr[2,])))
?predict.comprisk
?cuminc
print(xx <- cuminc(ss,cc,gg,strt))
?predict.cuminc
xx$Tests
plot(xx)
plot(xx, color = 1:6)
plot(xx,lty=1,color=1:6)
aj <- cuminc(time, cause, platelet, data = bmt, cause = 1)
aj <- cuminc(time, cause, platelet, data = bmt)
aj <- cuminc(time, cause, platelet)
aj <- cuminc(bmt$time, bmt$cause, bmt$platelet)
plot(aj)
unique(bmt$cause)
aj
unique(bmt$platelet)
plot(aj)
plot(aj[1:2,])
aj$Tests
aj0 <- cuminc(bmt$time, (bmt$cause > 0), bmt$platelet)
(bmt$cause > 0)
aj0 <- cuminc(bmt$time, (bmt$cause > 0), bmt$platelet)
aj0 <- cuminc(bmt$time, as.numeric(bmt$cause > 0), bmt$platelet)
plot(aj0)
library(prodlim)
?prodlim
aaj <- prodlim(Hist(time, cause) ~ platelet, data = bmt)
summary(aaj)
plot(aaj)
predict(ajj, newdata, times = 5)
?predict.prodlim
predict(ajj, newdata = newdata, times = 5)
predict(aaj, newdata, times = 5)
p0SE^2
p0SE
p1SE
predict(aaj, newdata, times = 5, type = "cuminc")
newdata
aaj$var.cuminc
predict(aaj, times = 5, type = "cuminc")
predict(aaj, times = 5)
predict(aaj, newdata, times = 5, type = "cuminc")
predict(aaj, newdata, times = c(1,5), type = "cuminc")
predaaj <- predict(aaj, newdata = newdata, times = 5, type = "cuminc")
predaaj$`1`$`platelet=0`
aaj$se.cuminc[aaj$time>4 &aaj$time<6]
aaj$se.cuminc[aaj$time>1 &aaj$time<6]
aaj$se.cuminc
plot(aaj)
par(mfrow = c(1,2))
plot(aaj)
par(mfrow = c(1,1))
plot(aaj)
aaj$se.cuminc$`1`[aaj$time>1 &aaj$time<6]
predaaj
aaj$se.cuminc$`1`[aaj$time>4 &aaj$time<6]
aaj$var.cuminc$`1`[aaj$time>4 &aaj$time<6]
predaaj$`1`$`platelet=0`
aaj$cuminc[aaj$time>4 & aaj$time<6]
aaj$cuminc$`1`[aaj$time>4 & aaj$time<6]
predaaj$`1`$`platelet=0`
aaj$cuminc$`1`
aaj$cuminc$`1`[aaj$time>4 & aaj$time<6]
predaaj$`1`$`platelet=0`
aaj$time[aaj$time>4 & aaj$time<6]
predict(aaj, newdata, times = 5)
predict(aaj, newdata, times = 5,se = T)
predict(aaj, newdata, times = 5, var = T)
?quantile.prodlim
summary(aaj)
?confInt
quantile(ajj, .5, "1")
quantile(aaj, .5, "1")
quantile(aaj, .2, "1")
plot(ajj)
plot(aaj)
plot(aaj, xlim = c(0,5))
plot(aaj, xlim = c(0,7))
predaaj$`1`$`platelet=0`
predict(aaj, newdata, times = 5, var = T)
aaj$var.cuminc$`1`
aaj
summary(aaj)
aaj$time
predaaj <- predict(aaj, newdata = newdata, times = 5, type = "cuminc")
predaaj <- predict(aaj, newdata = newdata, times = .99, type = "cuminc")
predaaj
aaj$cuminc$`1`[time < 1]
aaj$cuminc$`1`[predaaj$time < 1]
aaj$cuminc$`1`[aaj$time < 1]
aaj$cuminc$`1`
confint(aaj)
aaj <- prodlim(Hist(time, (cause>0)) ~ platelet, data = bmt)
plot(aaj)
plot(1-aaj)
?prodlim
aaj <- prodlim(Hist(time, (cause>0)) ~ platelet, data = bmt, type = "cuminc")
plot(aaj)
aaj <- prodlim(Hist(time, cause) ~ platelet, data = bmt)
plot(aaj)
plot(aaj, ylim = c(0,70))
plot(aaj, ylim = c(0,.70))
plot(aaj)
aaj$var.cuminc$`1`
length(aaj$var.cuminc$`1`)
?prodlim
head(bmt)
aaj0 <- prodlim(Hist(time, cause) ~ platelet, data = bmt, subset = (bmt$platelet == 0))
predaaj0 <- predict(aaj0, newdata = newdata, times = 5, type = "cuminc")
predaaj0 <- predict(aaj0, times = 5, type = "cuminc")
aaj0 <- prodlim(Hist(time, cause) ~ 1, data = bmt, subset = (bmt$platelet == 0))
predaaj0 <- predict(aaj0, times = 5, type = "cuminc")
predaaj0
predaaj$`1`
predaaj
predaaj0
predaaj <- predict(aaj, newdata = newdata, times = 5, type = "cuminc")
predaaj
predaaj
predaaj0
aaj0$se.cuminc
max(aaj0$se.cuminc$`1`[aaj0$time<=5])
aaj0$se.cuminc$`1`[aaj0$time<=5]
aaj0 <- prodlim(Hist(time, cause) ~ 1, data = bmt, subset = (bmt$platelet == 0))
predaaj0 <- predict(aaj0, times = 5, type = "cuminc")
SE0 <- max(aaj0$se.cuminc$`1`[aaj0$time<=5])
aaj1 <- prodlim(Hist(time, cause) ~ 1, data = bmt, subset = (bmt$platelet == 1))
predaaj1 <- predict(aaj1, times = 5, type = "cuminc")
SE1 <- max(aaj1$se.cuminc$`1`[aaj1$time<=5])
predaaj0
predaaj0$`1`
h <- c(predaaj0$`1`/predaaj1$`1`, -1/predaaj0$`1`)
RRSE <- sqrt((t(h) %*% Sigma %*% h)[1,1])
Sigma <- matrix(c(SE0^2,0,0,SE1^2), nrow = 2)
h <- c(predaaj0$`1`/predaaj1$`1`, -1/predaaj0$`1`)
RRSE <- sqrt((t(h) %*% Sigma %*% h)[1,1])
predaaj0$`1`/predaaj1$`1`*exp(c(0, -qnorm(.975), qnorm(.975)) * RRSE)
sqrt((t(h) %*% Sigma %*% h)[1,1])
h
Sigma
p0SE
sqrt(Sigma)
p1SE
max(aaj0$cuminc$`1`[aaj0$time<=5])
predaaj0
max(aaj0$cuminc$`1`[aaj0$time<=5])
predaaj0$`1`
p0 <- max(aaj0$cuminc$`1`[aaj0$time <= 5])
p0
p1 <- max(aaj1$cuminc$`1`[aaj1$time <= 5])
p1
h <- c(p0/p1, -1/p1)
RRSE <- sqrt((t(h) %*% Sigma %*% h)[1,1])
Sigma <- matrix(c(SE0^2,0,0,SE1^2), nrow = 2)
h <- c(p0/p1, -1/p0)
RRSE <- sqrt((t(h) %*% Sigma %*% h)[1,1])
p0/p1*exp(c(0, -qnorm(.975), qnorm(.975)) * RRSE)
plot(aaj)
?plot.prodlim
plot(aaj)
plot(aaj, cause = 2)
qplot(time, value, colour = variable, geom = 'step', data = melted) + xlim(0,preds$time[length(preds$time)-4]) + #ylim(0,1) +
geom_step(aes(x = time, y = c(plwr[1,], plwr[2,]))) +
geom_step(aes(x = time, y = c(pupr[1,], pupr[2,])))
aaj <- prodlim(Hist(time, cause) ~ platelet, data = bmt)
predaaj <- predict(aaj, newdata = newdata, times = 5, type = "cuminc")
predaaj$`1`$`platelet=0`
plot(aaj, cause = 2)
plot(aaj, cause = 1)
library(landest)
d <- example.rct
d <- example.rct()
?example_rct
data("example_rct")
rm(list = ls())
data("example_rct")
head(example_rct)
unique(example_rct$treat)
summary(example_rct)
sub <- subset(example_rct, TL > .8)
sub <- transform(sub, DSnew = ifelse(DS = 1 & TS <= .8, 1, 0))
sub <- transform(sub, DSnew = ifelse((DS = 1 & TS <= .8), 1, 0))
head(sub)
model <- prodlim(Hist(TL, DL) ~ DSnew, data = sub)
plot(model)
sub <- subset(example_rct, TL > .8)
sub <- transform(sub, DSnew = ifelse((DS = 1 & TS <= .8), 1, 0), timenew = time - .8)
str(example_rct)
sub <- transform(sub, DSnew = ifelse((DS = 1 & TS <= .8), 1, 0), timenew = TL - .8)
model <- prodlim(Hist(TL, DL) ~ DSnew, data = sub)
plot(model)
model <- prodlim(Hist(timenew, DL) ~ DSnew, data = sub)
plot(model)
library(Rtools)
ls()
library(RcppArmadillo)
install.packages("Rtools")
library(devtools)
q()
q()
n
ko <- function(a = 2, b = a+2){
a+b
}
ko()
ko(b = 3)
rm(ko)
A <- list()
A
A <- list(for(i in 1:3) paste0("A", i))
A
A <- list(for(i in 1:3) {paste0("A", i)})
A
Sys.time()
?coxph
library(survival)
?coxph
?Surv
?aggregate
install.packages(copula)
install.packages("copula")
library(copula)
install.packages('copula')
getwd()
2+2
setwd("~/Dropbox/RPackage/biSurv")
file.exists("~/.ssh/id_rsa.pub")
git init
